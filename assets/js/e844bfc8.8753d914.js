"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[396],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>s,MDXProvider:()=>d,mdx:()=>f,useMDXComponents:()=>c,withMDXComponents:()=>p});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},l.apply(this,arguments)}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){return function(t){var r=c(t.components);return n.createElement(e,l({},t,{components:r}))}},c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},x=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,m=p["".concat(o,".").concat(d)]||p[d]||y[d]||l;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=x;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}x.displayName="MDXCreateElement"},37726:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const l={id:"aqueryctx"},o="aqueryctx type",i={unversionedId:"api/bxl/aqueryctx",id:"api/bxl/aqueryctx",title:"aqueryctx type",description:"The context for performing aquery operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within aquery command.",source:"@site/../docs/api/bxl/aqueryctx.generated.md",sourceDirName:"api/bxl",slug:"/api/bxl/aqueryctx",permalink:"/docs/api/bxl/aqueryctx",draft:!1,tags:[],version:"current",frontMatter:{id:"aqueryctx"},sidebar:"manualSidebar",previous:{title:"analysis_result type",permalink:"/docs/api/bxl/analysis_result"},next:{title:"audit_ctx type",permalink:"/docs/api/bxl/audit_ctx"}},u={},s=[{value:"aqueryctx.all_actions",id:"aqueryctxall_actions",level:2},{value:"aqueryctx.all_outputs",id:"aqueryctxall_outputs",level:2},{value:"aqueryctx.attrfilter",id:"aqueryctxattrfilter",level:2},{value:"aqueryctx.deps",id:"aqueryctxdeps",level:2},{value:"aqueryctx.eval",id:"aqueryctxeval",level:2}],p={toc:s};function c(e){let{components:t,...r}=e;return(0,a.mdx)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"aqueryctx-type"},(0,a.mdx)("inlineCode",{parentName:"h1"},"aqueryctx")," type"),(0,a.mdx)("p",null,"The context for performing ",(0,a.mdx)("inlineCode",{parentName:"p"},"aquery")," operations in bxl. The functions offered on this ctx are the same behaviour as the query functions available within aquery command."),(0,a.mdx)("p",null,"Query results are ",(0,a.mdx)("inlineCode",{parentName:"p"},"[StarlarkTargetSet]"),"s of ",(0,a.mdx)("inlineCode",{parentName:"p"},"[ActionQueryNode]"),"s, which supports iteration,\nindexing, ",(0,a.mdx)("inlineCode",{parentName:"p"},"len()"),", set addition/subtraction, and ",(0,a.mdx)("inlineCode",{parentName:"p"},"equals()"),"."),(0,a.mdx)("h2",{id:"aqueryctxall_actions"},"aqueryctx.all","_","actions"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def aqueryctx.all_actions(targets) -> target_set\n")),(0,a.mdx)("p",null,"Obtain all the actions declared within the analysis of a given target."),(0,a.mdx)("p",null,"This operation only makes sense on a target literal (it is a simple passthrough when passed\nan action)."),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"aqueryctxall_outputs"},"aqueryctx.all","_","outputs"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def aqueryctx.all_outputs(targets) -> target_set\n")),(0,a.mdx)("p",null,"Obtain the actions for all the outputs provided by the ",(0,a.mdx)("inlineCode",{parentName:"p"},"DefaultInfo")," for the targets passed as input. This includes both the ",(0,a.mdx)("inlineCode",{parentName:"p"},"default_outputs")," and ",(0,a.mdx)("inlineCode",{parentName:"p"},"other_outputs"),"."),(0,a.mdx)("p",null,"This operation only makes sense on a target literal (it does nothing if passed something\nelse)."),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"aqueryctxattrfilter"},"aqueryctx.attrfilter"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def aqueryctx.attrfilter(attr: str, value: str, targets) -> target_set\n")),(0,a.mdx)("p",null,"The attrfilter query for rule attribute filtering."),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"aqueryctxdeps"},"aqueryctx.deps"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def aqueryctx.deps(\n    universe,\n    depth: None | int = None,\n    filter: None | str = None\n) -> target_set\n")),(0,a.mdx)("p",null,"The deps query for finding the transitive closure of dependencies."),(0,a.mdx)("hr",null),(0,a.mdx)("h2",{id:"aqueryctxeval"},"aqueryctx.eval"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"def aqueryctx.eval(query: str, query_args = None)\n")),(0,a.mdx)("p",null,"Evaluates some general query string. ",(0,a.mdx)("inlineCode",{parentName:"p"},"query_args")," can be a target_set of unconfigured nodes, or a list of strings."))}c.isMDXComponent=!0}}]);